name: "01 - Release frontend"

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
      attestations: write
      id-token: write
      actions: write

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
### Create tag for frontend
      - uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
      - name: "bump version"
        working-directory: frontend
        run: |
          npm version patch
          echo "FRONTEND_VERSION=$(npm pkg get version | sed 's/\"//g')" >> "$GITHUB_ENV"
      - name: "Deploy version bump"
        working-directory: frontend
        run: |
          git add package.json 
          git commit -m "Bump frontend version to ${{env.FRONTEND_VERSION}}"
          git tag frontend-${{env.FRONTEND_VERSION}}
          git push origin frontend-${{env.FRONTEND_VERSION}}
          git push origin

### Build docker image
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: ${{ github.ref_name }}

      # Create a gzip file containing the built frontend
      - name: 'Build production Inventory Image'
        working-directory: frontend
        run: |
          docker build . --target buildimage --tag  ${{ steps.meta.outputs.tags }}-prod --build-arg BUILD_TARGET=build
      - name: 'Build test Inventory Image'
        working-directory: frontend
        run: |
          docker build . --target buildimage --tag  ${{ steps.meta.outputs.tags }}-test --build-arg BUILD_TARGET=build:test
      - name: 'Extract production gzip'
        working-directory: frontend
        run: |
          id=$(docker create  ${{ steps.meta.outputs.tags }}-prod)
          docker cp $id:/opt/oskari/dist - | gzip > ../oskari-frontend-${{ github.ref_name }}-prod.tar.gz
          docker rm -v $id
      - name: 'Extract test gzip'
        working-directory: frontend
        run: |
          id=$(docker create ${{ steps.meta.outputs.tags }}-test)
          docker cp $id:/opt/oskari/dist - | gzip > ../oskari-frontend-${{ github.ref_name }}-test.tar.gz
          docker rm -v $id
      - name: "Release zipped images"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: frontend-${{env.FRONTEND_VERSION}}
          name: Frontend ${{env.FRONTEND_VERSION}}
          files: |
            oskari-frontend-${{ github.ref_name }}-prod.tar.gz
            oskari-frontend-${{ github.ref_name }}-test.tar.gz

      - name: Trigger creation of server tag
        run: gh workflow run "02 - Build backend tag"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}