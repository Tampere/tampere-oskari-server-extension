name: Build and release frontend package

on:
  push:
    tags:
      - "frontend-*"

permissions:
  contents: write

jobs:
  build-dist-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - name: 'Define frontend version'
        run: echo "FRONTEND_VERSION=$(echo "${{ github.ref_name }}" | sed -E 's/[^0-9]*(.*)$/\1/')" >> "$GITHUB_ENV"
      - name: 'Force tag to package version'
        working-directory: ./frontend/
        run: npm version $${{ env.FRONTEND_VERSION }}|| echo "Version already correct"

      # Create a gzip file containing the built frontend
      - name: 'Build production Inventory Image'
        run: |
          docker build . --target buildimage --tag  ${{ steps.meta.outputs.tags }}-prod --build-arg BUILD_TARGET=build
          docker push ${{ steps.meta.outputs.tags }}-prod
      - name: 'Build test Inventory Image'
        run: |
          docker build . --target buildimage --tag  ${{ steps.meta.outputs.tags }}-test --build-arg BUILD_TARGET=build:test
          docker push  ${{ steps.meta.outputs.tags }}-test
      - name: 'Extract production gzip'
        run: |
          id=$(docker create  ${{ steps.meta.outputs.tags }}-prod)
          docker cp $id:/opt/oskari/dist - | gzip > oskari-frontend-${{ github.ref_name }}-prod.tar.gz
          docker rm -v $id
      - name: 'Extract test gzip'
        run: |
          id=$(docker create ${{ steps.meta.outputs.tags }}-test)
          docker cp $id:/opt/oskari/dist - | gzip > oskari-frontend-${{ github.ref_name }}-test.tar.gz
          docker rm -v $id
      - name: "Release zipped images"
        uses: softprops/action-gh-release@v2
        with:
          files: |
            oskari-frontend-${{ github.ref_name }}-prod.tar.gz
            oskari-frontend-${{ github.ref_name }}-test.tar.gz
