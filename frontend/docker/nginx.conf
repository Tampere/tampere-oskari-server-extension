###############################
# Oskari reverse proxy
###############################

# Jetty with oskari-map.war
upstream oskariserver {
    server oskari:8080;
}

# websocket mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    ## replace localhost with the your domain name
    server_name  localhost;
    listen       80;

    # static files - you should have Oskari frontend code on /opt/public/oskari directory or change this path
    root /var/www/html/;
    index  index.html index.htm;

    # allow uploading large WFS-attachments
    client_max_body_size 500M;

    # ssl config - optional, but recommended for offering https-urls
    listen       443 default_server ssl;
    ssl_certificate /etc/ssl/private/cert.pem;
    ssl_certificate_key /etc/ssl/private/key.pem;

    # Oskari-server Jetty location
    location / {
        proxy_pass http://oskariserver;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Host $http_host;

        # set all cookies to secure, httponly and samesite by modifying "path"
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=lax";

    }

    location ^~ /oskari/ {
        proxy_pass http://oskariserver;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Host $http_host;

        # set all cookies to secure, httponly and samesite by modifying "path"
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=lax";

    }

    location /oskari {
        proxy_pass http://oskariserver/oskari/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Host $http_host;

        # set all cookies to secure, httponly and samesite by modifying "path"
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=lax";

    }

    # Oskari frontend files
    location ^~ /Oskari/ {
        # Enable browser caching
        expires -1;
        # Use static gzipping instead of per request
        gzip_static on;

        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        rewrite ^/Oskari/(.*)$ $1 break;
        try_files /$1 /$1/ =404;
    }

}
